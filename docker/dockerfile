# This is a Dockerfile for ModProFT

FROM ubuntu:20.04
LABEL maintainer="max@schnitzler-family.de"


EXPOSE 50001-50004

# setup timezone
RUN echo 'Etc/UTC' > /etc/timezone && \
    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    apt-get update && apt-get install -q -y tzdata 

RUN DEBIAN_FRONTEND=noninteractive apt-get install lightdm -y

RUN apt-get update && apt-get install -y \
        sudo \
        vim \
        nano \
        gnupg2 \
        lsb-release \
        build-essential \
        curl \
        git \
        libcurl3-dev \
        libfreetype6-dev \
        libhdf5-serial-dev \
        libpng-dev \
        libzmq3-dev \
        pkg-config \
        rsync \
        software-properties-common \
        unzip \
        zip \
        zlib1g-dev \
        wget \
        cmake \
        apt-utils \
        netbeans \
        libeigen3-dev \
        libgoogle-glog-dev \
        libgtest-dev \
        libsuitesparse-dev \ 
        libopencv-dev \ 
        libzip-dev \
        libboost-all-dev \
        usbutils \
        && \
    rm -rf /var/lib/apt/lists/*

ARG USE_PYTHON_3_NOT_2=True
ARG _PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}
ARG PYTHON=python${_PY_SUFFIX}
ARG PIP=pip${_PY_SUFFIX}

RUN apt-get update && apt-get install -y \
    ${PYTHON} \
    ${PYTHON}-pip

RUN ${PIP} --no-cache-dir install --upgrade \
    pip \
    setuptools

RUN ln -s $(which ${PYTHON}) /usr/local/bin/python
    
# belongs to timezone
#&& rm -rf /var/lib/apt/lists/*

#########################
##   ROS & rosbridge   ##
#########################

ENV ROS2_DISTRO foxy
ENV ROS_MASTER_URI http://localhost:11311

# setup keys
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# setup sources.list
RUN echo "deb http://packages.ros.org/ros2/ubuntu focal main" > /etc/apt/sources.list.d/ros2-latest.list

# setup environment
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# install ros2 packages
RUN apt-get update && apt-get install -y \
    ros-foxy-ros-core=0.9.2-1* \
    && rm -rf /var/lib/apt/lists/*
    
# install bootstrap tools
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    python3-colcon-common-extensions \
    python3-colcon-mixin \
    python3-rosdep \
    python3-vcstool \
    && rm -rf /var/lib/apt/lists/*

# bootstrap rosdep
RUN rosdep init && \
  rosdep update --rosdistro $ROS2_DISTRO

# setup colcon mixin and metadata
RUN colcon mixin add default \
      https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml && \
    colcon mixin update && \
    colcon metadata add default \
      https://raw.githubusercontent.com/colcon/colcon-metadata-repository/master/index.yaml && \
    colcon metadata update

# install ros2 packages
RUN apt-get update && apt-get install -y \
    ros-foxy-ros-base=0.9.2-1* \
    && rm -rf /var/lib/apt/lists/*

# setup keys
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# install ros2 packages
RUN apt-get update && apt-get install -y \
    ros-foxy-demo-nodes-cpp=0.9.3-1* \
    ros-foxy-demo-nodes-py=0.9.3-1* \
    && rm -rf /var/lib/apt/lists/*
    
RUN apt-get update && apt-get install -y \
   ros-foxy-gazebo* \
   ros-foxy-rviz2 \
   ros-foxy-hls-lfcd-lds-driver \
   ros-foxy-rqt \
   ros-foxy-ros2-control \
   ros-foxy-ros2-controllers \
   ros-foxy-gazebo-ros2-control \
   ros-foxy-joint-state-publisher \
   ros-foxy-joint-state-publisher-gui \
   ros-foxy-moveit \
   ros-foxy-moveit-servo \
   ros-foxy-octomap-rviz-plugins \
   python3-opencv \
   python3-numpy \
   python3-scipy \
   python3-matplotlib \
   libdmtx0b \
   libpcl-dev

# UR dependencies
RUN apt-get update && apt-get install -y \
   ros-foxy-ur-msgs \
   ros-foxy-ur-client-library

# UR-Driver
RUN mkdir ~/ur_driver
RUN git clone -b foxy https://github.com/UniversalRobots/Universal_Robots_ROS2_Driver.git ~/ur_driver/src
RUN rm -rf ~/ur_driver/src/ur_description/*
RUN git clone -b ros2 https://github.com/UniversalRobots/Universal_Robots_ROS2_Description.git ~/ur_driver/Universal_Robots_ROS2_Description
RUN mv ~/ur_driver/Universal_Robots_ROS2_Description/* ~/ur_driver/src/ur_description
RUN rm -rf ~/ur_driver/Universal_Robots_ROS2_Description

# Add ROS Foxy setup to bashrc
RUN echo "\n#ROS Foxy Setup\nsource /opt/ros/foxy/setup.bash" >> /root/.bashrc
    
# Enter the container with a Bash shell.
CMD ["/bin/bash"]
