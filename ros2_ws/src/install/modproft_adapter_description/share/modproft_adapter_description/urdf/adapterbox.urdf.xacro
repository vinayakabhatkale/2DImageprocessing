<?xml version="1.0" ?>
<robot name="box" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:arg name="package_name" default="modprof_adapter_description" />
  <xacro:arg name="entity_type" default=""/>
  <xacro:arg name="entity_name" default=""/>

  <xacro:property name="package_name" value="$(arg package_name)" />
  <xacro:property name="box_type" value="$(arg entity_type)" />
  <xacro:property name="box_name" value="$(arg entity_name)" />

  <xacro:include filename="$(find ${package_name})/urdf/inc/materials.xacro" />
  <xacro:include filename="$(find ${package_name})/urdf/inc/adapterbox_transmission.xacro" />
  <xacro:include filename="$(find ${package_name})/urdf/inc/adapterbox_common.xacro" />

  <xacro:read_model_data model_parameter_file="$(find ${package_name})/config/${box_type}.yaml"/>
  <!-- <xacro:set_transmission box_name="${box_name}"/> -->
  <link name="${box_name}">
    <inertial>
      <origin rpy="${box_inertial_origin_rpy}" xyz="${box_inertial_origin_xyz}"/>
      <mass value="${box_inertial_mass}"/>
      <inertia ixx="${box_inertial_inertia_ixx}"
               ixy="${box_inertial_inertia_ixy}"
               ixz="${box_inertial_inertia_ixy}"
               iyy="${box_inertial_inertia_iyy}"
               iyz="${box_inertial_inertia_iyz}"
               izz="${box_inertial_inertia_izz}"/>
    </inertial>
    <visual>
      <origin rpy="${box_visual_origin_rpy}" xyz="${box_visual_origin_xyz}"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/${box_visual_geometry_mesh}" scale="${box_visual_geometry_scale}"/>
      </geometry>
      <material name="${box_visual_material}"/>
    </visual>
    <collision>
      <origin rpy="${box_collision_origin_rpy}" xyz="${box_collision_origin_xyz}"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/${box_collision_geometry_mesh}" scale="${box_collision_geometry_scale}"/>
      </geometry>
    </collision>
  </link>

  <link name="cover_${box_name}">
    <inertial>
      <origin rpy="${cover_inertial_origin_rpy}" xyz="${cover_inertial_origin_xyz}"/>
      <mass value="${cover_inertial_mass}"/>
      <inertia ixx="${cover_inertial_inertia_ixx}"
               ixy="${cover_inertial_inertia_ixy}"
               ixz="${cover_inertial_inertia_ixy}"
               iyy="${cover_inertial_inertia_iyy}"
               iyz="${cover_inertial_inertia_iyz}"
               izz="${cover_inertial_inertia_izz}"/>
    </inertial>
    <visual>
      <origin rpy="${cover_visual_origin_rpy}" xyz="${cover_visual_origin_xyz}"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/${cover_visual_geometry_mesh}" scale="${cover_visual_geometry_scale}"/>
      </geometry>
      <material name="${cover_visual_material}"/>
    </visual>
    <collision>
      <origin rpy="${cover_collision_origin_rpy}" xyz="${cover_collision_origin_xyz}"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/${cover_collision_geometry_mesh}" scale="${cover_collision_geometry_scale}"/>
      </geometry>
    </collision>
  </link> <!--
  <link name="lever_${box_name}">
    <inertial>
      <origin rpy="${lever_inertial_origin_rpy}" xyz="${lever_inertial_origin_xyz}"/>
      <mass value="${lever_inertial_mass}"/>
      <inertia ixx="${lever_inertial_inertia_ixx}"
               ixy="${lever_inertial_inertia_ixy}"
               ixz="${lever_inertial_inertia_ixy}"
               iyy="${lever_inertial_inertia_iyy}"
               iyz="${lever_inertial_inertia_iyz}"
               izz="${lever_inertial_inertia_izz}"/>
    </inertial>
    <visual>
      <origin rpy="${lever_visual_origin_rpy}" xyz="${lever_visual_origin_xyz}"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/${lever_visual_geometry_mesh}" scale="${lever_visual_geometry_scale}"/>
      </geometry>
      <material name="${lever_visual_material}"/>
    </visual>
    <collision>
      <origin rpy="${lever_collision_origin_rpy}" xyz="${lever_collision_origin_xyz}"/>
      <geometry>
        <mesh filename="package://${package_name}/meshes/${lever_collision_geometry_mesh}" scale="${lever_collision_geometry_scale}"/>
      </geometry>
    </collision>
  </link> -->

  <joint name="boxcover_joint_${box_name}" type="revolute">
    <origin rpy="${boxcover_joint_origin_rpy}" xyz="${boxcover_joint_origin_xyz}"/>
    <parent link="${box_name}"/>
    <child link="cover_${box_name}"/>
    <axis xyz="${boxcover_joint_origin_axis_xyz}"/>
    <limit effort="${boxcover_joint_origin_limit_effort}"
           lower="${boxcover_joint_origin_limit_lower}"
           upper="${boxcover_joint_origin_limit_upper}"
           velocity="${boxcover_joint_origin_limit_velocity}"/>
  </joint> <!--
  <joint name="boxlever_joint_${box_name}" type="revolute">
    <origin rpy="${boxlever_joint_origin_rpy}" xyz="${boxlever_joint_origin_xyz}"/>
    <parent link="${box_name}"/>
    <child link="lever_${box_name}"/>
    <axis xyz="${boxlever_joint_origin_axis_xyz}"/>
    <limit effort="${boxlever_joint_origin_limit_effort}"
           lower="${boxlever_joint_origin_limit_lower}"
           upper="${boxlever_joint_origin_limit_upper}"
           velocity="${boxlever_joint_origin_limit_velocity}"/>
  </joint> -->

</robot>